format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - RELEASE_VERSION: 1.1.4 

  # define these in your .bitrise.secrets.yml
  - BITRISE_APK_PATH: $BITRISE_APK_PATH
  - BITRISE_APK_PATH_LIST: $BITRISE_APK_PATH_LIST
  - MAPPING_PATH: $MAPPING_PATH
  - API_TOKEN: $API_TOKEN
  - APP_ID: $APP_ID
  - IS_USE_APK_PATH_LIST: $IS_USE_APK_PATH_LIST

workflows:
  test:
    steps:
    - script:
        title: Install testing tools
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            # Check for unhandled errors
            go get -u -v github.com/kisielk/errcheck
            # Go lint
            go get -u -v github.com/golang/lint/golint
    - script:
        title: Err check
        inputs:
        - content: errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go lint
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: Go test
        inputs:
        - content: go test
    - change-workdir:
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - path::./:
        run_if: true
        inputs:
        - is_use_apk_path_list: "${IS_USE_APK_PATH_LIST}"
        - apk_path: "${BITRISE_APK_PATH}"
        - apk_path_list: "${BITRISE_APK_PATH_LIST}"
        - mapping_path: "${MAPPING_PATH}"
        - api_token: "${API_TOKEN}"
        - app_id: "${APP_ID}"
    - script:
        title: Output (generated by the Step) tests
        inputs:
        - content: |-
            #!/bin/bash
            echo "HOCKEYAPP_DEPLOY_STATUS: ${HOCKEYAPP_DEPLOY_STATUS}"
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL: ${HOCKEYAPP_DEPLOY_PUBLIC_URL}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL: ${HOCKEYAPP_DEPLOY_BUILD_URL}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL: ${HOCKEYAPP_DEPLOY_CONFIG_URL}"
            echo
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST: ${HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL_LIST: ${HOCKEYAPP_DEPLOY_BUILD_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL_LIST: ${HOCKEYAPP_DEPLOY_CONFIG_URL_LIST}"

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -e

            export CI=true
            releaseman create --version $RELEASE_VERSION

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: hockeyapp-deploy-android
      - STEP_GIT_VERION_TAG_TO_SHARE: $RELEASE_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-hockeyapp-android-deploy.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}

            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}

            bitrise share finish
