format_version: 5
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_ID_IN_STEPLIB: hockeyapp-deploy-android

  # define these in your .bitrise.secrets.yml
  - BITRISE_APK_PATH: $BITRISE_APK_PATH
  - MAPPING_PATH: $MAPPING_PATH
  - API_TOKEN: $API_TOKEN
  - APP_ID: $APP_ID

workflows:
  test:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - _test_simple_apk
    - _test_multi_apk

  _test_simple_apk:
    steps:
    - script:
        title: remove _tmp directory
        inputs:
        - content: rm -rf ./_tmp
    - change-workdir:
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
       title: download test APK
       inputs:
       - content: |
           #!/bin/bash
           APK_URL="https://bitrise-test-resources.s3.amazonaws.com/apk_mapping/app-debug.apk"
           BITRISE_APK_PATH="./app-debug.apk"
           curl -o $BITRISE_APK_PATH $APK_URL
           envman add --key BITRISE_APK_PATH --value $BITRISE_APK_PATH
    - path::./:
        run_if: true
        inputs:
        - apk_path: "${BITRISE_APK_PATH}"
        - mapping_path: "${MAPPING_PATH}"
        - api_token: "${API_TOKEN}"
        - app_id: "${APP_ID}"
    - script:
        title: Output (generated by the Step) tests
        inputs:
        - content: |-
            #!/bin/bash
            echo "HOCKEYAPP_DEPLOY_STATUS: ${HOCKEYAPP_DEPLOY_STATUS}"
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL: ${HOCKEYAPP_DEPLOY_PUBLIC_URL}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL: ${HOCKEYAPP_DEPLOY_BUILD_URL}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL: ${HOCKEYAPP_DEPLOY_CONFIG_URL}"
            echo
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST: ${HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL_LIST: ${HOCKEYAPP_DEPLOY_BUILD_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL_LIST: ${HOCKEYAPP_DEPLOY_CONFIG_URL_LIST}"

  _test_multi_apk:
    steps:
    - script:
        title: remove _tmp directory
        inputs:
        - content: rm -rf ./_tmp
    - change-workdir:
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
       title: download test APKs
       inputs:
       - content: |
           #!/bin/bash
           APK_URL="https://bitrise-test-resources.s3.amazonaws.com/apk_mapping/app-debug.apk"
           BITRISE_APK_PATH="./app-debug.apk"
           curl -o $BITRISE_APK_PATH $APK_URL
           envman add --key BITRISE_APK_PATH --value $BITRISE_APK_PATH

           BITRISE_APK_PATH2="./app-debug2.apk"
           cp "${BITRISE_APK_PATH}" "${BITRISE_APK_PATH2}"
           envman add --key BITRISE_APK_PATH2 --value ${BITRISE_APK_PATH2}
    - path::./:
        run_if: true
        inputs:
        - apk_path: "${BITRISE_APK_PATH}|${BITRISE_APK_PATH2}"
        - mapping_path: "${MAPPING_PATH}"
        - api_token: "${API_TOKEN}"
        - app_id: "${APP_ID}"
    - script:
        title: Output (generated by the Step) tests
        inputs:
        - content: |-
            #!/bin/bash
            echo "HOCKEYAPP_DEPLOY_STATUS: ${HOCKEYAPP_DEPLOY_STATUS}"
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL: ${HOCKEYAPP_DEPLOY_PUBLIC_URL}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL: ${HOCKEYAPP_DEPLOY_BUILD_URL}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL: ${HOCKEYAPP_DEPLOY_CONFIG_URL}"
            echo
            echo "HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST: ${HOCKEYAPP_DEPLOY_PUBLIC_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_BUILD_URL_LIST: ${HOCKEYAPP_DEPLOY_BUILD_URL_LIST}"
            echo "HOCKEYAPP_DEPLOY_CONFIG_URL_LIST: ${HOCKEYAPP_DEPLOY_CONFIG_URL_LIST}"

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
